"use strict";!function(r){var s=".gt-times {font-family: \"times new roman\";font-style: normal !important;font-weight: bold;text-transform: uppercase;}.gt-corsiva {font-family: \"MTCORSVA\";font-style: normal !important;font-weight: bold;text-transform: none !important;}.gt-times .gt-times sup {display: none;}@font-face {font-family: 'MTCORSVA';src: url('https://www.gyrotonic.com/wp-content/themes/gyrotonic/fonts/MTCORSVA.eot');src: local('MTCORSVA'), url('https://www.gyrotonic.com/wp-content/themes/gyrotonic/fonts/MTCORSVA.woff') format('woff'), url('https://www.gyrotonic.com/wp-content/themes/gyrotonic/fonts/MTCORSVA.ttf') format('truetype');}",t={"gt-times":["GYROTONIC EXPANSION SYSTEM","GYROTONIC","GYROKINESIS","GYROTONER","ARCHWAY"],"gt-corsiva":["Ultima ","Cobra","The Art of Exercising and Beyond"]},m=["strong","span","p","a","h1","h2","h3","h4","h5","h6","li"];function a(f){r(function(c){c.each(t,function(a,t){c.each(t,function(t,i){var e=[],r=[],n=new RegExp(i+"速(?![^<]*>|[^<>]*</)","g"),o=new RegExp(i+"(?![^<]*>|[^<>]*</)","g");function s(o,e){return function(){var t,n=c(this).clone();n.find("*").remove(),n.is(e)&&(t=(t=c(this).html()).replace(o,'<span class="'+a+'">'+i+"<sup>速</sup></span>"),c(this).html(t))}}c.each(m,function(t,n){var o=f?f+" ":"";e.push(o+n+":contains("+i+"速),"+o+n+":contains("+i+"&reg;)"),r.push(o+n+":contains("+i+")")}),c(e.join(",")).each(s(n,":contains("+i+"速),:contains("+i+"&reg;)")),c(r.join(",")).not("."+a).each(s(o,":contains("+i+")"))})})})}var c=!1;setTimeout(function t(){if(window.$&&window.$()&&window.$().jquery)r=window.$;else if(!r||!r().jquery)return c||(n="//code.jquery.com/jquery-3.2.1.min.js",o="jquery",(i=document).getElementById(o)||((e=i.createElement("script")).src=n,e.id=o,i.body.appendChild(e)),c=!0),setTimeout(t,200);var n,o,e,i;$("body").append("<style>"+s+"</style>"),window.GT_MANUAL||a()},1),window.gyrotonicTrademarks={apply:a}}(window.jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
