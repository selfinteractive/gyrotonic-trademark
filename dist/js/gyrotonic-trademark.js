"use strict";!function(a){var t="®",h={"®":"&reg;","™":"&trade;"},r=".gt-times {font-family: \"times new roman\";font-style: normal !important;font-weight: bold;text-transform: uppercase;}.gt-corsiva {font-family: \"MTCORSVA\";font-style: normal !important;font-weight: bold;text-transform: none !important;}.gt-times .gt-times sup {display: none;}@font-face {font-family: 'MTCORSVA';src: url('https://www.gyrotonic.com/wp-content/themes/gyrotonic/fonts/MTCORSVA.eot');src: local('MTCORSVA'), url('https://www.gyrotonic.com/wp-content/themes/gyrotonic/fonts/MTCORSVA.woff') format('woff'), url('https://www.gyrotonic.com/wp-content/themes/gyrotonic/fonts/MTCORSVA.ttf') format('truetype');}",n={"gt-times":["GYROTONIC EXPANSION SYSTEM","GYROTONIC","GYROKINESIS","GYROTONER","ARCHWAY",{term:"Ultima",afterTerm:" Reveal",afterTermSymbol:"™"}],"gt-corsiva":[{term:"Ultima",afterTerm:" XS"},"Ultima","Cobra","The Art of Exercising and Beyond"]},y={"GYROTONIC EXPANSION SYSTEM":t,GYROTONIC:t,GYROKINESIS:t,GYROTONER:t,Cobra:t,"The Art of Exercising and Beyond":t,Ultima:t,ARCHWAY:"™"},d=["strong","span","p","a","h1","h2","h3","h4","h5","h6","li"];function i(w){a(function(g){g.each(n,function(u,t){g.each(t,function(t,n){var s="",a="",r="",o="";"string"==typeof n?a=n:(a=n.term,s=n.afterTerm||"",r=n.afterTermSymbol||"",o=h[r]);var i=[],c=[],m=y[a],f=h[m],e=new RegExp(a+m+s+"(?![^<]*>|[^<>]*</)","g"),p=new RegExp(a+s+"(?![^<]*>|[^<>]*</)","g");function l(e,o){return function(){var t,n=g(this).clone();n.find("*").remove(),console.log(n),n.hasClass("gttm-ignore")||!n.is(o)||n.hasClass("gttm")||(t=(t=g(this).html()).replace(e,'<span class="gttm '+u+'">'+a+"<sup>"+m+"</sup>"+s+(r?"<sup>"+r+"</sup>":"")+"</span>"),g(this).html(t))}}g.each(d,function(t,n){var e=w?w+" ":"";i.push(e+n+":contains("+a+m+s+"),"+e+n+":contains("+a+f+s+(r?"<sup>"+o+"</sup>":"")+")"),c.push(e+n+":contains("+a+s+")")}),g(i.join(",")).each(l(e,":contains("+a+m+s+"),:contains("+a+f+s+(r?"<sup>"+o+"</sup>":"")+")")),g(c.join(",")).not("."+u).each(l(p,":contains("+a+s+")"))})}),g('span[class*="gttm"] span[class*="gttm"]').each(function(t,n){g(n).find("sup").remove()}),g('span[class*="gttm"] > span[class*="gttm"]').each(function(t,n){g(n).contents().unwrap()})})}var c=!1;setTimeout(function t(){if(window.$&&window.$()&&window.$().jquery)a=window.$;else if(!a||!a().jquery)return c||(n="//code.jquery.com/jquery-3.2.1.min.js",e="jquery",(s=document).getElementById(e)||((o=s.createElement("script")).src=n,o.id=e,s.body.appendChild(o)),c=!0),setTimeout(t,200);var n,e,o,s;$("body").append("<style>"+r+"</style>"),window.GT_MANUAL||i()},1),window.gyrotonicTrademarks={apply:i}}(window.jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
