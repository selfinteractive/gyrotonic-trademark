"use strict";!function(r){var t="®",p={"®":"&reg;","™":"&trade;"},s=".gt-times {font-family: \"times new roman\";font-style: normal !important;font-weight: bold;text-transform: uppercase;}.gt-corsiva {font-family: \"MTCORSVA\";font-style: normal !important;font-weight: bold;text-transform: none !important;}.gt-times .gt-times sup {display: none;}@font-face {font-family: 'MTCORSVA';src: url('https://www.gyrotonic.com/wp-content/themes/gyrotonic/fonts/MTCORSVA.eot');src: local('MTCORSVA'), url('https://www.gyrotonic.com/wp-content/themes/gyrotonic/fonts/MTCORSVA.woff') format('woff'), url('https://www.gyrotonic.com/wp-content/themes/gyrotonic/fonts/MTCORSVA.ttf') format('truetype');}",n={"gt-times":["GYROTONIC EXPANSION SYSTEM","GYROTONIC","GYROKINESIS","GYROTONER","ARCHWAY"],"gt-corsiva":["Ultima ","Cobra","The Art of Exercising and Beyond"]},u={"GYROTONIC EXPANSION SYSTEM":t,GYROTONIC:t,GYROKINESIS:t,GYROTONER:t,Cobra:t,"The Art of Exercising and Beyond":t,"Ultima ":t,ARCHWAY:"™"},l=["strong","span","p","a","h1","h2","h3","h4","h5","h6","li"];function a(w){r(function(m){m.each(n,function(f,t){m.each(t,function(t,i){var e=[],r=[],s=u[i],a=p[s],n=new RegExp(i+s+"(?![^<]*>|[^<>]*</)","g"),o=new RegExp(i+"(?![^<]*>|[^<>]*</)","g");function c(o,e){return function(){var t,n=m(this).clone();n.find("*").remove(),n.is(e)&&(t=(t=m(this).html()).replace(o,'<span class="'+f+'">'+i+"<sup>"+s+"</sup></span>"),m(this).html(t))}}m.each(l,function(t,n){var o=w?w+" ":"";e.push(o+n+":contains("+i+s+"),"+o+n+":contains("+i+a+")"),r.push(o+n+":contains("+i+")")}),m(e.join(",")).each(c(n,":contains("+i+s+"),:contains("+i+a+")")),m(r.join(",")).not("."+f).each(c(o,":contains("+i+")"))})})})}var c=!1;setTimeout(function t(){if(window.$&&window.$()&&window.$().jquery)r=window.$;else if(!r||!r().jquery)return c||(n="//code.jquery.com/jquery-3.2.1.min.js",o="jquery",(i=document).getElementById(o)||((e=i.createElement("script")).src=n,e.id=o,i.body.appendChild(e)),c=!0),setTimeout(t,200);var n,o,e,i;$("body").append("<style>"+s+"</style>"),window.GT_MANUAL||a()},1),window.gyrotonicTrademarks={apply:a}}(window.jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
